
@{
    ViewBag.Title = "Index";
}
<script>
    //-----обработ. переключ. AWS - Azure--------------------
    $(function () {
        var key = 1;
        var flag = true;
        $('input[name=switchOption]').click(function (e) {
            key *= -1;
            flag = key < 0 ? false : true;
            $(this).attr('checked', flag)
            if (flag == true) {
                $(this).val('Azur')
            }
            else {
                $(this).val('AWS');
            }
            $.ajax({
                url: "/AdminPanel/SwitchContainer",
                method: "GET",
                data: { nameContainer: $(this).val() },    //AWS - Azure
                success: function (data) {
                    alert("It's good!")
                },
                error: function (e, msg) {
                    alert(msg)
                }
            })
        })
    })
    //CSS for Links
    $(function () {
        $('a').css({ "font-size": "18px", "margin-left": "10px", "margin-top": "40px" })
    })
    //--------------- S.T.A.T.I.S.T.I.C. ---------------------------------
    $(function () {
        $('#link-statistics').click(e => {
            e.preventDefault()
            $.get({
                url: "/AdminPanel/Statistic",
                success: function (data) {
                    alert(data)  //здесь нет набора данных, только извещение -  данные сохр. на сервере
                    $("img", "div.gallery").attr('src', '/Files/podarok.png')
                },
                error(xhr, msg) {
                    alert(msg)
                }
            }).then(
                $("img", "div.gallery").each(
                    (i, val) => {
                        setIconHover(i, val)    //mouseover..addParagraph
                    }),

                imgClick(),//->ajaxImgClick()
                repeatImg(),  //активир. клонир. изобр.+установ. data-num = numQuery
                removeImg()//активир. удал. изобр.
            )
        })
    })
    //Коллекция сопоставлений  index - Tema
    const arrTems = ["Categories by gender", "Registration by year", "Product by area", "Statistic by all categories", "Products by age", "AVG Prices by category"];

    function setImgGraphic(item) {
        $(item).attr('src', '/Files/graphic.png');
        item.style.cursor = "pointer";
    }
    function setImgPodarok(item) {
        $(item).attr('src', '/Files/podarok.png');
        $(item).parent().children('p').remove()
    }
    //обраб. клика - добав. картинку, пронумер. картинки
    function repeatImg() {
        $('a#repeat').click((e) => {
            e.preventDefault()
            if ($('div.gallery img').length >= 6) {
                alert("Извините, в настоящий момент количество графиков ограничено!")
                return
            }
            var firstImg = $('div.gallery img').first();
            //console.log(firstImg)
            var clonImg = $(firstImg).clone();
            var lenOld = $('div.gallery img').length;

            $('div.gallery').append(clonImg)

            $("img", "div.gallery").each((i, val) => {
                //console.log("i: ", i)

                if (i >= lenOld) { //старые не трогать!
                    $(val).attr("data-num", i)
                    setIconHover(i, val)
                }
            })
            imgClick()  //переустанов.  обраб. клика
        })
    }
    //удалить послед. график
    function removeImg() {
        $('#remove').click((e) => {
            if ($('div.gallery img').length != 1) {
                $('div.gallery img').last().remove()
            }
            else alert("Error.!")
        })
    }
    function addParagraph(i, val) {
        $(val).parent().append('<p>' + arrTems[i] + '</p>')
    }

    function setIconHover(i, val) {
        $(val).mouseover((e) => {
            setImgGraphic(val);
            if (arguments[2] == null || arguments[2] == undefined)
                addParagraph(i, val);
        }).mouseout((e) => {
            setImgPodarok(val)
        })
    }
    var tempImgId = sessionStorage.getItem("tempImgId")
    function imgClick() {    //активир. клик по изобр.
        $('.gallery img').unbind("click")
            .click((e) => {
                ajaxAfterClickImg(e)
            })
    }
    function ajaxAfterClickImg(e) {
        var numQuery = $(e.target).attr("data-num");
        $.get({
            url: "/AdminPanel/BeginHandler?key=" + numQuery,
            success: function (obj) {   //server-response
                if (obj.success == true) {
                    //console.log(obj.data)
                    //console.log(obj.data.arrData)
                    //console.log(obj.data.labels)
                    CreateGraphic(obj.data, numQuery);

                    $(e.target).unbind()    //на текущ. откл. все событ
                    addParagraph(parseInt(numQuery), e.target)
                    //console.log("temp: ",tempImgId)
                    //console.log("numQuery: ", numQuery)

                    if (numQuery != tempImgId) {//восстанов.  изобр+событ.
                        $('.gallery img').each((i, item) => {
                            if ($(item).attr("data-num") == tempImgId) {
                                setImgPodarok(item)
                                setIconHover(tempImgId, item)   //+addParagraph
                                imgClick()  //+addParagraph()
                            }
                        })
                    }
                    tempImgId = numQuery;
                    sessionStorage.setItem("tempImgId:", tempImgId)
                    $('a#repeat').removeClass("disabled")  //актвир. обработч. клонир.
                    $('a#remove').removeClass("disabled")  //тоже но удален.
                    $('a#link-predictor').removeClass("disabled")
                }
                else {
                    alert("Error handler data!");
                }
            },
            error(xhr, message) {
                alert(message)
            }
        })
    }
    //-----------------------------------------data.arrLabel - array obj----------------------------------------------
    function getNamePropObj(obj) {
        arr = []
        for (item of obj) { //iterat array
            //console.log("item.obj: ", item)
            inner(item, arr);   //decompos. inner obj
        }
        return arr;
    }
    function inner(obj, arr) {
        for (key in obj) {
            //console.log("obj.key: ", obj[key]);
            //console.log("key: ", key)
            if (key != 'color') {
                arr.push(obj[key])
            }
            if (typeof (obj[key]) == "object") {
                getNamePropObj(obj[key])
                break;
            }
        }
        return arr;
    }

    function getLabels(dataLabels, numQuery) {
        //console.log("dataLabes: ", dataLabels)       //['/Date(100500100500)/',..]
        switch (numQuery) {
            case 0: return dataLabels
                break
            case 1: return parseDate(dataLabels).get(); //['/Date(100500100500)/',..]
                break
                {
                    //case 2: return dataLabels;
                    //    break
                    //case 3: return dataLabels;
                    //    break

                    //case 4: return dataLabels;
                    //    break
                }
            default: return dataLabels;
        }
    }
    //теперь вызыв. только в getLabels()
    function parseDate(param) {
        nameLabel = $(param).map((i, val) => {
            //console.log("param: ", param)
            //console.log("parseDate val: ", val)            //['/Date(100500100500)/',..]
            var reg = /\d+/gi;
            res = val.match(reg)
            res = parseInt(res[0])   //=> 100500100500
            res = new Date(res)      //17 june 2018 17:00:00
            res = res.getFullYear()  //2018
            //console.log("parseDate res: ", res)
            return res;
        })
        return nameLabel;
    }

    function createDataSet(nameLabels, numQuery, ringQueue, arrData) {
        var set = []
        //console.log("namelabels: ", nameLabels) //['Men','Women', 'X']
        $(nameLabels).each((i, item) => {
            //console.log("i: ", i)
            var _data = Array.from($(arrData[i]).map(function () {
                return this.Count
            }))
            {
                //var _label = undefined;
                //switch (parseInt(numQuery)) {
                //    case 0: _label = item    // nameLabels[i]
                //        break;
                //    case 1: _label = item//parseDate(nameLabels)[i]
                //        break;
                //    case 2: _label = item
                //        break;
                //    case 3: _label = item
                //        break;
                //}
            }
            //console.log("label: ", _label)
            console.log("_data: ", _data)
            var obj = {
                label: item, //_label,
                backgroundColor: ringQueue.pop(),
                borderColor: 'rgb(255, 99, 132)',
                data: _data
            };
            set.push(obj);//для кажд. пола свой массив данных
        })
        return set;
    }
    //===================       CHART.JS         ===============================
    function CreateGraphic(data, numQuery) {
        $('div.sandbox').removeClass('hidden')
        //1)-----------массив ярлыков-легенд-------------------------
        //console.log("arrLabes: ", data.arrLabel);              //[{year: "/Date(100500)"}, {color: "/Date.."}]

        var nameLabel = getNamePropObj(data.arrLabel);  //["/Date(100500)","/.."]
        //console.log("nameLabels: ", nameLabel)  //[0,1]
        //2)-----------------массив цветов-------------
        var arrColor = (data.arrLabel).map(function (i, val) {
            return i.color;
        })
        var ringQueue = new CircularQueue(arrColor.length); //набор цветов долж. быть тот же..
        ringQueue.addRange(arrColor);                               //..но с разным  порядком
        _labels = getLabels(data.labels, parseInt(numQuery))

        dataSets = createDataSet(nameLabel, numQuery, ringQueue, data.arrData);

        //console.log("labels: ", _labels)
        //console.log("dataSets: ", dataSets)
        //---------------------chart.js----------------------------
        drawGraphic(_labels, dataSets)
        {
            //var ctx = document.getElementById('myChart').getContext('2d');
            //var chart = new Chart(ctx, {
            //    type: 'bar',
            //    //отрис.  граф. для наборов из 3 групп
            //    data: {
            //        labels: _labels,    //[DVD, Books, Electronic] ;[2017, 2018, 2019] - oX
            //        datasets: dataSets
            //    },
            //    options: {}
            //});
        }
    }
    function drawGraphic(_labels, dataSets) {
        var ctx = document.getElementById('myChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'bar',
            //отрис.  граф. для наборов из 3 групп
            data: {
                labels: _labels,    //[DVD, Books, Electronic] ;[2017, 2018, 2019] - oX
                datasets: dataSets  //Mens->{17, 1, 1}..
            },
            options: {}
        });
    }
    //---------------
    //вычисл. выше
    var _labels = []
    var dataSets = []
    //=========================AWS Lambda-Predict ================================
    //Отправить json-dataframe в AWS-bucket через запрос в контроллере
    $(function () {
        $('#link-predictor').click((e) => {
            e.preventDefault();
            $.ajax({
                method: 'GET',
                //далее в контроллере json.txt  уйдет в AWS-s3 (saving)
                url: "/AdminPanel/Index?keyPython=1",   
                success: function (data) {
                    if (data.success) {
                        alert(data.message)
                        console.log("url: ", data.data)
                        $('#link-predict-json').removeClass('disabled')
                    }
                    else alert(data.message)
                },
                error(xhr, msg) {
                    alert(msg)
                }
            })
        })
        //<Получить прогноз>: обратиться к бакету ч/з API-Gateway
        //вызвать  AWS-lambda  по keyOne, keyTwo
        $('#link-predict-json').click((e) => {
            e.preventDefault();
            //console.log("labels[0]: ", _labels[0])  //DVD
            //console.log("dataSets[0].label: ", dataSets[0].label)   //Mens
            //console.log("dataSets[0].label: ", dataSets[0].data)    //{17, 1, 1}
            $.ajax({
                //Api-Gateway(proxy)
                url: "https://c1dzhr2cal.execute-api.us-west-2.amazonaws.com/dev1/{+proxy}",
                data: { keyOne: _labels[0], keyTwo: dataSets[0].label },    //DVD, Mens
                method: 'POST',
                success: function (data) {
                   
                    //1)-нужно изм. dataSet - исп. пришедш. массив массивов: Mens: {17, 1, 1} => Mens: {-21, 0, 0}..
                    dataSets.map(function (item, i) {
                        console.log("item old data: " + item.data) //17, 1, 1
                        if (i == 0) {   //Mens
                            //item.data = data['Mens'] //полная замена
                            $(data['Mens']).each((j, val) => {
                                if (val['category'] == 'DVD') {
                                    item.data[0] = val['predict']
                                } else if (val['category'] == 'Books') {
                                    item.data[1] = val['predict']
                                } else {
                                    item.data[2] = val['predict']
                                }
                            })
                        }
                        else if (i == 1) {
                            //item.data = data['Womens']
                            $(data['Womens']).each((j, val) => {
                                if (val['category'] == 'DVD') {
                                    item.data[0] = val['predict']
                                } else if (val['category'] == 'Books') {
                                    item.data[1] = val['predict']
                                } else {
                                    item.data[2] = val['predict']
                                }
                            })
                        }
                        else {
                            //item.data=data['X']
                            $(data['Womens']).each((j, val) => {
                                if (val['category'] == 'DVD') {
                                    item.data[0] = val['predict']
                                } else if (val['category'] == 'Books') {
                                    item.data[1] = val['predict']
                                } else {
                                    item.data[2] = val['predict']
                                }
                            })
                        }
                    })
                    //console.log("upd dataSet: " + dataSets)

                    //2)-перерис. графики
                    drawGraphic(_labels, dataSets)
                    $('#link-code-aws').removeClass('disabled')
                },
                error(xhr, msg) {
                    alert(msg)
                }
            })
        })
    })
</script>
<h2>Administrator Panel</h2>

<div class="jumbotron">
    <div style="display:flex">
        <div class="list-group-item col-lg-6" id="switch-blobcontainer" style="width:300px">
            AWS container
            <div class="material-switch pull-right">
                <input id="switchOptionContainer" name="switchOption" type="checkbox" checked="checked" />
                <label for="switchOptionContainer" class="label-default"></label>
                Azure container
            </div>
        </div>
        <div class="col-lg-3">
            @Html.ActionLink("Подготовить статистику", "Index", "AdminPanel", null, new { id = "link-statistics" })
        </div>
        <div class="col-lg-3">
            @Html.ActionLink("Отправить json-dataframe в AWS-bucket для подготовки прогноза", "Index",
                                                                                            "AdminPanel", new { keyPython = 1 }, new { id = "link-predictor", @class = "disabled" })
        </div>
    </div>

    <div style="display:flex; margin:20px">
        <div style="margin:20px">
            <a class="btn btn-success disabled" href="#" id="repeat">
                <i class="fa fa-flag-o fa-lg"></i> Еще
            </a>
        </div>
        <div style="margin:20px">
            <a class="btn btn-danger disabled" href="#" id="remove">
                <i class="fa fa-trash fa-lg"></i> Удалить
            </a>
        </div>
    </div>

    <div class="gallery" style="display:flex; margin:30px; flex-wrap:wrap">
        <img src="~/Files/no_image.png" style="width:30%; margin: 30px 10px" data-num="0" />
        <img src="~/Files/no_image.png" style="width:30%; margin: 30px 10px" data-num="1" />
    </div>
</div>

<div class="jumbotron alert-info hidden sandbox">
    <p>Распределние статистики по выборкам</p>
    <div class="col-lg-3">
        <p><a class="btn btn-link disabled" href="https://c1dzhr2cal.execute-api.us-west-2.amazonaws.com/dev1" id="link-predict-json">Расчитать прогноз &raquo;</a></p>
    </div>
    <div class="col-lg-3">
        <a class="btn btn-link disabled" href="https://for-static-web.s3-us-west-2.amazonaws.com/Auction.html" id="link-code-aws">Python Code for prediction &raquo;</a>
    </div>
    <canvas id="myChart"></canvas>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.js"></script>
<script src="~/Scripts/MyShareScripts/CircularQueue.js"></script>